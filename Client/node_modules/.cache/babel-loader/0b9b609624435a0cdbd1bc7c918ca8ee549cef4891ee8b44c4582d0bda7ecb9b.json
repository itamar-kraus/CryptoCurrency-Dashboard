{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ndvp3\\\\OneDrive - ort braude college of engineering\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\\\u05E1\\u05DE\\u05E1\\u05D8\\u05E8 6\\\\WEB\\\\Project_react\\\\CryptoCurrency-Dashboard\\\\Client\\\\src\\\\pages\\\\Home\\\\CryptoChart\\\\CryptoChart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { makeApiRequest } from \"../utils\";\nimport { Line } from \"react-chartjs-2\";\nimport { useMode } from \"../../../modeContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getDateAtIndex = index => {\n  const currentYear = new Date().getFullYear();\n  const currentDate = new Date(currentYear, 0, 1);\n  currentDate.setDate(currentDate.getDate() + index);\n  return currentDate;\n};\nconst newDays = Array.from({\n  length: 365\n}, (_, i) => getDateAtIndex(i));\nexport const CryptoChart = ({\n  selectedCoin\n}) => {\n  _s();\n  const {\n    isDarkMode\n  } = useMode();\n  const [chartData, setChartData] = useState([]);\n  const data = {\n    labels: newDays,\n    datasets: [{\n      data: chartData,\n      borderWidth: 2,\n      backgroundColor: isDarkMode ? \"gray\" : \"gray\",\n      borderColor: isDarkMode ? \"white\" : \"black\",\n      pointRadius: 0,\n      pointHoverRadius: 10,\n      label: \"Prices in USD\"\n    }]\n  };\n  useEffect(() => {\n    const getGraphData = async () => {\n      try {\n        if (!(selectedCoin !== null && selectedCoin !== void 0 && selectedCoin.id)) return;\n        const coinData = await makeApiRequest(`coins/${selectedCoin === null || selectedCoin === void 0 ? void 0 : selectedCoin.id}/market_chart?vs_currency=usd&days=365&interval=daily&precision=5`);\n        const chartPrices = coinData.prices.map(subList => subList[1]);\n        setChartData(chartPrices);\n      } catch (err) {\n        console.warn(err);\n      }\n    };\n    getGraphData();\n  }, [selectedCoin === null || selectedCoin === void 0 ? void 0 : selectedCoin.id]);\n  const options = {\n    responsive: true,\n    maintainAspectRatio: true,\n    plugins: {\n      legend: {\n        labels: {\n          color: isDarkMode ? \"white\" : \"black\"\n        }\n      }\n    },\n    scales: {\n      x: {\n        display: false,\n        grid: {\n          color: isDarkMode ? \"rgba(255, 255, 255, 0.1)\" : \"rgba(0, 0, 0, 0.1)\"\n        },\n        ticks: {\n          color: \"white\"\n        }\n      },\n      y: {\n        beginAtZero: true,\n        grid: {\n          color: isDarkMode ? \"rgba(255, 255, 255, 0.1)\" : \"rgba(0, 0, 0, 0.1)\"\n        },\n        ticks: {\n          color: isDarkMode ? \"white\" : \"black\"\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"chart-container\",\n    className: \"p-2 md:p-6 rounded-lg shadow-md w-full md:w-3/4 mx-auto flex-1\",\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(CryptoChart, \"W6oT1wSjhiPbjixGTqndGLyCK6M=\", false, function () {\n  return [useMode];\n});\n_c = CryptoChart;\nvar _c;\n$RefreshReg$(_c, \"CryptoChart\");","map":{"version":3,"names":["React","useEffect","useState","makeApiRequest","Line","useMode","jsxDEV","_jsxDEV","getDateAtIndex","index","currentYear","Date","getFullYear","currentDate","setDate","getDate","newDays","Array","from","length","_","i","CryptoChart","selectedCoin","_s","isDarkMode","chartData","setChartData","data","labels","datasets","borderWidth","backgroundColor","borderColor","pointRadius","pointHoverRadius","label","getGraphData","id","coinData","chartPrices","prices","map","subList","err","console","warn","options","responsive","maintainAspectRatio","plugins","legend","color","scales","x","display","grid","ticks","y","beginAtZero","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ndvp3/OneDrive - ort braude college of engineering/שולחן העבודה/סמסטר 6/WEB/Project_react/CryptoCurrency-Dashboard/Client/src/pages/Home/CryptoChart/CryptoChart.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { makeApiRequest } from \"../utils\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { useMode } from \"../../../modeContext\";\r\n\r\nconst getDateAtIndex = (index) => {\r\n  const currentYear = new Date().getFullYear();\r\n  const currentDate = new Date(currentYear, 0, 1);\r\n  currentDate.setDate(currentDate.getDate() + index);\r\n  return currentDate;\r\n};\r\n\r\nconst newDays = Array.from({ length: 365 }, (_, i) => getDateAtIndex(i));\r\n\r\nexport const CryptoChart = ({ selectedCoin }) => {\r\n  const { isDarkMode } = useMode();\r\n\r\n  const [chartData, setChartData] = useState([]);\r\n\r\n  const data = {\r\n    labels: newDays,\r\n    datasets: [\r\n      {\r\n        data: chartData,\r\n        borderWidth: 2,\r\n        backgroundColor: isDarkMode ? \"gray\" : \"gray\",\r\n        borderColor: isDarkMode ? \"white\" : \"black\",\r\n        pointRadius: 0,\r\n        pointHoverRadius: 10,\r\n        label: \"Prices in USD\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getGraphData = async () => {\r\n      try {\r\n        if (!selectedCoin?.id) return;\r\n\r\n        const coinData = await makeApiRequest(\r\n          `coins/${selectedCoin?.id}/market_chart?vs_currency=usd&days=365&interval=daily&precision=5`\r\n        );\r\n\r\n        const chartPrices = coinData.prices.map((subList) => subList[1]);\r\n\r\n        setChartData(chartPrices);\r\n      } catch (err) {\r\n        console.warn(err);\r\n      }\r\n    };\r\n\r\n    getGraphData();\r\n  }, [selectedCoin?.id]);\r\n\r\n  const options = {\r\n    responsive: true,\r\n    maintainAspectRatio: true,\r\n    plugins: {\r\n      legend: {\r\n        labels: {\r\n          color: isDarkMode ? \"white\" : \"black\",\r\n        },\r\n      },\r\n    },\r\n    scales: {\r\n      x: {\r\n        display: false,\r\n        grid: {\r\n          color: isDarkMode ? \"rgba(255, 255, 255, 0.1)\" : \"rgba(0, 0, 0, 0.1)\",\r\n        },\r\n        ticks: {\r\n          color: \"white\",\r\n        },\r\n      },\r\n      y: {\r\n        beginAtZero: true,\r\n        grid: {\r\n          color: isDarkMode ? \"rgba(255, 255, 255, 0.1)\" : \"rgba(0, 0, 0, 0.1)\",\r\n        },\r\n        ticks: {\r\n          color: isDarkMode ? \"white\" : \"black\",\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div\r\n      id=\"chart-container\"\r\n      className=\"p-2 md:p-6 rounded-lg shadow-md w-full md:w-3/4 mx-auto flex-1\"\r\n    >\r\n      <Line data={data} options={options} />\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}